#!/usr/bin/env bash

if [ $? -ne 0 ] ; then
        echo "Неправильний вхідний параметр!"; 1>&2
        exit 1;
fi

export SCRIPT_DIR="$(
  cd "$(
    dirname "$(
      (readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}") \
        | sed -e "s#^../#$(dirname "$(dirname "${BASH_SOURCE[0]}")")/#"
    )"
  )/.." >/dev/null \
  && pwd
)"
export WORKING_DIR="/opt/itarmy/"
export GREEN='\033[0;32m'
export RED='\033[0;31m'
export NC='\033[0m'

install_utils() {
   declare -a UTILS;

    UTILS=('docker' 'tools' 'fail2ban' 'ufw' 'mhddos' 'db1000n' 'distress')

    for i in "${!UTILS[@]}"; do
        source "${SCRIPT_DIR}/utils/${UTILS[i]}.sh"
        install_"${UTILS[i]}"
    done
}

if [ "$1" = "--auto-install" ] ; then
   install_utils
else
  main_menu_init() {
    menu=(
          "Розширення портів"
          "Налаштування безпеки"
          "Установка ддос інструментів"
          "Налаштування ддос інструментів"
          "Запуск|Зупинка|Статус ддос інструментів"
          "Статус атаки"
          )
      source "${SCRIPT_DIR}/menu/menu.sh"
      init "$menu"
      result="$?"

        case "$result" in
                    0)
                        source "${SCRIPT_DIR}/utils/port-extending.sh"
                        extend_ports
                    ;;
                    1)
                      menu=(
                            "Налаштування фаєвола"
                            "Налаштування захисту від брутфорса"
                            "Повернутись назад"
                            )
                      init "$menu"
                      menu_result="$?"

                      case "$menu_result" in
                        0)
                            source "${SCRIPT_DIR}/utils/ufw.sh"
                            configure_ufw
                        ;;
                        1)
                            source "${SCRIPT_DIR}/utils/fail2ban.sh"
                            configure_fail2ban
                        ;;
                        2)
                            main_menu_init
                        ;;
                      esac
                      ;;
                    2)
                      echo -ne "
Юзер ІД ${RED}(Для збору та використання для лідерборда особистої статистики)${NC}:
"
                      read user_id

                      if [[ "$user_id" ]]; then
                        sed -i "s/user-id=.*/user-id=$user_id/g" ${SCRIPT_DIR}/services/EnvironmentFile
                      fi

                      install_utils
                    ;;
                    3 | 4)
                       menu=(
                            "Мхддос"
                            "DB1000N"
                            "Distress"
                            "Повернутись назад"
                            )
                      init "$menu"
                      menu_result="$?"

                      case "$menu_result" in
                        0)
                            source "${SCRIPT_DIR}/utils/mhddos.sh"
                        ;;
                        1)
                           source "${SCRIPT_DIR}/utils/db1000n.sh"
                        ;;
                        2)
                           source "${SCRIPT_DIR}/utils/distress.sh"
                        ;;
                        3)
                          main_menu_init
                        ;;
                      esac
                    if [[ "$result" == "3" ]]; then
                      configure
                    elif [[ "$result" == "4" ]]; then
                      initiate
                    fi
                  ;;
                  5)
                      services=("mhddos" "distress" "db1000n")
                      service=""

                      for element in "${services[@]}"
                      do
                        if systemctl is-active --quiet "$element.service"; then
                          service="$element"
                          break
                        fi
                      done
                      if [[ -n "$service" ]]; then
                        while true; do
                          clear
                          echo -e "${GREEN}Запущено $service${NC}"
                          journalctl -u "$service.service" | tail -20
                          sleep 5
                        done
                      else
                        echo -e "${RED}Немає запущених процесів${NC}"
                      fi
                  ;;
        esac
  }
  main_menu_init
fi